# coding: utf-8

"""
    BIPAD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Loss(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'people_death_count': 'int',
        'people_death_male_count': 'int',
        'people_death_female_count': 'int',
        'people_death_unknown_count': 'int',
        'people_death_disabled_count': 'int',
        'people_missing_count': 'int',
        'people_missing_male_count': 'int',
        'people_missing_female_count': 'int',
        'people_missing_unknown_count': 'int',
        'people_missing_disabled_count': 'int',
        'people_injured_count': 'int',
        'people_injured_male_count': 'int',
        'people_injured_female_count': 'int',
        'people_injured_unknown_count': 'int',
        'people_injured_disabled_count': 'int',
        'people_affected_count': 'int',
        'family_affected_count': 'int',
        'family_relocated_count': 'int',
        'family_evacuated_count': 'int',
        'livestock_destroyed_count': 'int',
        'infrastructure_destroyed_count': 'int',
        'infrastructure_destroyed_house_count': 'int',
        'infrastructure_affected_house_count': 'int',
        'infrastructure_destroyed_road_count': 'int',
        'infrastructure_affected_road_count': 'int',
        'infrastructure_destroyed_bridge_count': 'int',
        'infrastructure_affected_bridge_count': 'int',
        'infrastructure_destroyed_electricity_count': 'int',
        'infrastructure_affected_electricity_count': 'int',
        'infrastructure_economic_loss': 'int',
        'agriculture_economic_loss': 'int',
        'created_on': 'datetime',
        'modified_on': 'datetime',
        'description': 'str',
        'estimated_loss': 'int'
    }

    attribute_map = {
        'id': 'id',
        'people_death_count': 'peopleDeathCount',
        'people_death_male_count': 'peopleDeathMaleCount',
        'people_death_female_count': 'peopleDeathFemaleCount',
        'people_death_unknown_count': 'peopleDeathUnknownCount',
        'people_death_disabled_count': 'peopleDeathDisabledCount',
        'people_missing_count': 'peopleMissingCount',
        'people_missing_male_count': 'peopleMissingMaleCount',
        'people_missing_female_count': 'peopleMissingFemaleCount',
        'people_missing_unknown_count': 'peopleMissingUnknownCount',
        'people_missing_disabled_count': 'peopleMissingDisabledCount',
        'people_injured_count': 'peopleInjuredCount',
        'people_injured_male_count': 'peopleInjuredMaleCount',
        'people_injured_female_count': 'peopleInjuredFemaleCount',
        'people_injured_unknown_count': 'peopleInjuredUnknownCount',
        'people_injured_disabled_count': 'peopleInjuredDisabledCount',
        'people_affected_count': 'peopleAffectedCount',
        'family_affected_count': 'familyAffectedCount',
        'family_relocated_count': 'familyRelocatedCount',
        'family_evacuated_count': 'familyEvacuatedCount',
        'livestock_destroyed_count': 'livestockDestroyedCount',
        'infrastructure_destroyed_count': 'infrastructureDestroyedCount',
        'infrastructure_destroyed_house_count': 'infrastructureDestroyedHouseCount',
        'infrastructure_affected_house_count': 'infrastructureAffectedHouseCount',
        'infrastructure_destroyed_road_count': 'infrastructureDestroyedRoadCount',
        'infrastructure_affected_road_count': 'infrastructureAffectedRoadCount',
        'infrastructure_destroyed_bridge_count': 'infrastructureDestroyedBridgeCount',
        'infrastructure_affected_bridge_count': 'infrastructureAffectedBridgeCount',
        'infrastructure_destroyed_electricity_count': 'infrastructureDestroyedElectricityCount',
        'infrastructure_affected_electricity_count': 'infrastructureAffectedElectricityCount',
        'infrastructure_economic_loss': 'infrastructureEconomicLoss',
        'agriculture_economic_loss': 'agricultureEconomicLoss',
        'created_on': 'createdOn',
        'modified_on': 'modifiedOn',
        'description': 'description',
        'estimated_loss': 'estimatedLoss'
    }

    def __init__(self, id=None, people_death_count=None, people_death_male_count=None, people_death_female_count=None, people_death_unknown_count=None, people_death_disabled_count=None, people_missing_count=None, people_missing_male_count=None, people_missing_female_count=None, people_missing_unknown_count=None, people_missing_disabled_count=None, people_injured_count=None, people_injured_male_count=None, people_injured_female_count=None, people_injured_unknown_count=None, people_injured_disabled_count=None, people_affected_count=None, family_affected_count=None, family_relocated_count=None, family_evacuated_count=None, livestock_destroyed_count=None, infrastructure_destroyed_count=None, infrastructure_destroyed_house_count=None, infrastructure_affected_house_count=None, infrastructure_destroyed_road_count=None, infrastructure_affected_road_count=None, infrastructure_destroyed_bridge_count=None, infrastructure_affected_bridge_count=None, infrastructure_destroyed_electricity_count=None, infrastructure_affected_electricity_count=None, infrastructure_economic_loss=None, agriculture_economic_loss=None, created_on=None, modified_on=None, description=None, estimated_loss=None):  # noqa: E501
        """Loss - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._people_death_count = None
        self._people_death_male_count = None
        self._people_death_female_count = None
        self._people_death_unknown_count = None
        self._people_death_disabled_count = None
        self._people_missing_count = None
        self._people_missing_male_count = None
        self._people_missing_female_count = None
        self._people_missing_unknown_count = None
        self._people_missing_disabled_count = None
        self._people_injured_count = None
        self._people_injured_male_count = None
        self._people_injured_female_count = None
        self._people_injured_unknown_count = None
        self._people_injured_disabled_count = None
        self._people_affected_count = None
        self._family_affected_count = None
        self._family_relocated_count = None
        self._family_evacuated_count = None
        self._livestock_destroyed_count = None
        self._infrastructure_destroyed_count = None
        self._infrastructure_destroyed_house_count = None
        self._infrastructure_affected_house_count = None
        self._infrastructure_destroyed_road_count = None
        self._infrastructure_affected_road_count = None
        self._infrastructure_destroyed_bridge_count = None
        self._infrastructure_affected_bridge_count = None
        self._infrastructure_destroyed_electricity_count = None
        self._infrastructure_affected_electricity_count = None
        self._infrastructure_economic_loss = None
        self._agriculture_economic_loss = None
        self._created_on = None
        self._modified_on = None
        self._description = None
        self._estimated_loss = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if people_death_count is not None:
            self.people_death_count = people_death_count
        if people_death_male_count is not None:
            self.people_death_male_count = people_death_male_count
        if people_death_female_count is not None:
            self.people_death_female_count = people_death_female_count
        if people_death_unknown_count is not None:
            self.people_death_unknown_count = people_death_unknown_count
        if people_death_disabled_count is not None:
            self.people_death_disabled_count = people_death_disabled_count
        if people_missing_count is not None:
            self.people_missing_count = people_missing_count
        if people_missing_male_count is not None:
            self.people_missing_male_count = people_missing_male_count
        if people_missing_female_count is not None:
            self.people_missing_female_count = people_missing_female_count
        if people_missing_unknown_count is not None:
            self.people_missing_unknown_count = people_missing_unknown_count
        if people_missing_disabled_count is not None:
            self.people_missing_disabled_count = people_missing_disabled_count
        if people_injured_count is not None:
            self.people_injured_count = people_injured_count
        if people_injured_male_count is not None:
            self.people_injured_male_count = people_injured_male_count
        if people_injured_female_count is not None:
            self.people_injured_female_count = people_injured_female_count
        if people_injured_unknown_count is not None:
            self.people_injured_unknown_count = people_injured_unknown_count
        if people_injured_disabled_count is not None:
            self.people_injured_disabled_count = people_injured_disabled_count
        if people_affected_count is not None:
            self.people_affected_count = people_affected_count
        if family_affected_count is not None:
            self.family_affected_count = family_affected_count
        if family_relocated_count is not None:
            self.family_relocated_count = family_relocated_count
        if family_evacuated_count is not None:
            self.family_evacuated_count = family_evacuated_count
        if livestock_destroyed_count is not None:
            self.livestock_destroyed_count = livestock_destroyed_count
        if infrastructure_destroyed_count is not None:
            self.infrastructure_destroyed_count = infrastructure_destroyed_count
        if infrastructure_destroyed_house_count is not None:
            self.infrastructure_destroyed_house_count = infrastructure_destroyed_house_count
        if infrastructure_affected_house_count is not None:
            self.infrastructure_affected_house_count = infrastructure_affected_house_count
        if infrastructure_destroyed_road_count is not None:
            self.infrastructure_destroyed_road_count = infrastructure_destroyed_road_count
        if infrastructure_affected_road_count is not None:
            self.infrastructure_affected_road_count = infrastructure_affected_road_count
        if infrastructure_destroyed_bridge_count is not None:
            self.infrastructure_destroyed_bridge_count = infrastructure_destroyed_bridge_count
        if infrastructure_affected_bridge_count is not None:
            self.infrastructure_affected_bridge_count = infrastructure_affected_bridge_count
        if infrastructure_destroyed_electricity_count is not None:
            self.infrastructure_destroyed_electricity_count = infrastructure_destroyed_electricity_count
        if infrastructure_affected_electricity_count is not None:
            self.infrastructure_affected_electricity_count = infrastructure_affected_electricity_count
        if infrastructure_economic_loss is not None:
            self.infrastructure_economic_loss = infrastructure_economic_loss
        if agriculture_economic_loss is not None:
            self.agriculture_economic_loss = agriculture_economic_loss
        if created_on is not None:
            self.created_on = created_on
        if modified_on is not None:
            self.modified_on = modified_on
        if description is not None:
            self.description = description
        if estimated_loss is not None:
            self.estimated_loss = estimated_loss

    @property
    def id(self):
        """Gets the id of this Loss.  # noqa: E501


        :return: The id of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Loss.


        :param id: The id of this Loss.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def people_death_count(self):
        """Gets the people_death_count of this Loss.  # noqa: E501


        :return: The people_death_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_death_count

    @people_death_count.setter
    def people_death_count(self, people_death_count):
        """Sets the people_death_count of this Loss.


        :param people_death_count: The people_death_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_death_count = people_death_count

    @property
    def people_death_male_count(self):
        """Gets the people_death_male_count of this Loss.  # noqa: E501


        :return: The people_death_male_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_death_male_count

    @people_death_male_count.setter
    def people_death_male_count(self, people_death_male_count):
        """Sets the people_death_male_count of this Loss.


        :param people_death_male_count: The people_death_male_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_death_male_count = people_death_male_count

    @property
    def people_death_female_count(self):
        """Gets the people_death_female_count of this Loss.  # noqa: E501


        :return: The people_death_female_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_death_female_count

    @people_death_female_count.setter
    def people_death_female_count(self, people_death_female_count):
        """Sets the people_death_female_count of this Loss.


        :param people_death_female_count: The people_death_female_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_death_female_count = people_death_female_count

    @property
    def people_death_unknown_count(self):
        """Gets the people_death_unknown_count of this Loss.  # noqa: E501


        :return: The people_death_unknown_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_death_unknown_count

    @people_death_unknown_count.setter
    def people_death_unknown_count(self, people_death_unknown_count):
        """Sets the people_death_unknown_count of this Loss.


        :param people_death_unknown_count: The people_death_unknown_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_death_unknown_count = people_death_unknown_count

    @property
    def people_death_disabled_count(self):
        """Gets the people_death_disabled_count of this Loss.  # noqa: E501


        :return: The people_death_disabled_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_death_disabled_count

    @people_death_disabled_count.setter
    def people_death_disabled_count(self, people_death_disabled_count):
        """Sets the people_death_disabled_count of this Loss.


        :param people_death_disabled_count: The people_death_disabled_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_death_disabled_count = people_death_disabled_count

    @property
    def people_missing_count(self):
        """Gets the people_missing_count of this Loss.  # noqa: E501


        :return: The people_missing_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_missing_count

    @people_missing_count.setter
    def people_missing_count(self, people_missing_count):
        """Sets the people_missing_count of this Loss.


        :param people_missing_count: The people_missing_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_missing_count = people_missing_count

    @property
    def people_missing_male_count(self):
        """Gets the people_missing_male_count of this Loss.  # noqa: E501


        :return: The people_missing_male_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_missing_male_count

    @people_missing_male_count.setter
    def people_missing_male_count(self, people_missing_male_count):
        """Sets the people_missing_male_count of this Loss.


        :param people_missing_male_count: The people_missing_male_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_missing_male_count = people_missing_male_count

    @property
    def people_missing_female_count(self):
        """Gets the people_missing_female_count of this Loss.  # noqa: E501


        :return: The people_missing_female_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_missing_female_count

    @people_missing_female_count.setter
    def people_missing_female_count(self, people_missing_female_count):
        """Sets the people_missing_female_count of this Loss.


        :param people_missing_female_count: The people_missing_female_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_missing_female_count = people_missing_female_count

    @property
    def people_missing_unknown_count(self):
        """Gets the people_missing_unknown_count of this Loss.  # noqa: E501


        :return: The people_missing_unknown_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_missing_unknown_count

    @people_missing_unknown_count.setter
    def people_missing_unknown_count(self, people_missing_unknown_count):
        """Sets the people_missing_unknown_count of this Loss.


        :param people_missing_unknown_count: The people_missing_unknown_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_missing_unknown_count = people_missing_unknown_count

    @property
    def people_missing_disabled_count(self):
        """Gets the people_missing_disabled_count of this Loss.  # noqa: E501


        :return: The people_missing_disabled_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_missing_disabled_count

    @people_missing_disabled_count.setter
    def people_missing_disabled_count(self, people_missing_disabled_count):
        """Sets the people_missing_disabled_count of this Loss.


        :param people_missing_disabled_count: The people_missing_disabled_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_missing_disabled_count = people_missing_disabled_count

    @property
    def people_injured_count(self):
        """Gets the people_injured_count of this Loss.  # noqa: E501


        :return: The people_injured_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_injured_count

    @people_injured_count.setter
    def people_injured_count(self, people_injured_count):
        """Sets the people_injured_count of this Loss.


        :param people_injured_count: The people_injured_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_injured_count = people_injured_count

    @property
    def people_injured_male_count(self):
        """Gets the people_injured_male_count of this Loss.  # noqa: E501


        :return: The people_injured_male_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_injured_male_count

    @people_injured_male_count.setter
    def people_injured_male_count(self, people_injured_male_count):
        """Sets the people_injured_male_count of this Loss.


        :param people_injured_male_count: The people_injured_male_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_injured_male_count = people_injured_male_count

    @property
    def people_injured_female_count(self):
        """Gets the people_injured_female_count of this Loss.  # noqa: E501


        :return: The people_injured_female_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_injured_female_count

    @people_injured_female_count.setter
    def people_injured_female_count(self, people_injured_female_count):
        """Sets the people_injured_female_count of this Loss.


        :param people_injured_female_count: The people_injured_female_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_injured_female_count = people_injured_female_count

    @property
    def people_injured_unknown_count(self):
        """Gets the people_injured_unknown_count of this Loss.  # noqa: E501


        :return: The people_injured_unknown_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_injured_unknown_count

    @people_injured_unknown_count.setter
    def people_injured_unknown_count(self, people_injured_unknown_count):
        """Sets the people_injured_unknown_count of this Loss.


        :param people_injured_unknown_count: The people_injured_unknown_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_injured_unknown_count = people_injured_unknown_count

    @property
    def people_injured_disabled_count(self):
        """Gets the people_injured_disabled_count of this Loss.  # noqa: E501


        :return: The people_injured_disabled_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_injured_disabled_count

    @people_injured_disabled_count.setter
    def people_injured_disabled_count(self, people_injured_disabled_count):
        """Sets the people_injured_disabled_count of this Loss.


        :param people_injured_disabled_count: The people_injured_disabled_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_injured_disabled_count = people_injured_disabled_count

    @property
    def people_affected_count(self):
        """Gets the people_affected_count of this Loss.  # noqa: E501


        :return: The people_affected_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._people_affected_count

    @people_affected_count.setter
    def people_affected_count(self, people_affected_count):
        """Sets the people_affected_count of this Loss.


        :param people_affected_count: The people_affected_count of this Loss.  # noqa: E501
        :type: int
        """

        self._people_affected_count = people_affected_count

    @property
    def family_affected_count(self):
        """Gets the family_affected_count of this Loss.  # noqa: E501


        :return: The family_affected_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._family_affected_count

    @family_affected_count.setter
    def family_affected_count(self, family_affected_count):
        """Sets the family_affected_count of this Loss.


        :param family_affected_count: The family_affected_count of this Loss.  # noqa: E501
        :type: int
        """

        self._family_affected_count = family_affected_count

    @property
    def family_relocated_count(self):
        """Gets the family_relocated_count of this Loss.  # noqa: E501


        :return: The family_relocated_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._family_relocated_count

    @family_relocated_count.setter
    def family_relocated_count(self, family_relocated_count):
        """Sets the family_relocated_count of this Loss.


        :param family_relocated_count: The family_relocated_count of this Loss.  # noqa: E501
        :type: int
        """

        self._family_relocated_count = family_relocated_count

    @property
    def family_evacuated_count(self):
        """Gets the family_evacuated_count of this Loss.  # noqa: E501


        :return: The family_evacuated_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._family_evacuated_count

    @family_evacuated_count.setter
    def family_evacuated_count(self, family_evacuated_count):
        """Sets the family_evacuated_count of this Loss.


        :param family_evacuated_count: The family_evacuated_count of this Loss.  # noqa: E501
        :type: int
        """

        self._family_evacuated_count = family_evacuated_count

    @property
    def livestock_destroyed_count(self):
        """Gets the livestock_destroyed_count of this Loss.  # noqa: E501


        :return: The livestock_destroyed_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._livestock_destroyed_count

    @livestock_destroyed_count.setter
    def livestock_destroyed_count(self, livestock_destroyed_count):
        """Sets the livestock_destroyed_count of this Loss.


        :param livestock_destroyed_count: The livestock_destroyed_count of this Loss.  # noqa: E501
        :type: int
        """

        self._livestock_destroyed_count = livestock_destroyed_count

    @property
    def infrastructure_destroyed_count(self):
        """Gets the infrastructure_destroyed_count of this Loss.  # noqa: E501


        :return: The infrastructure_destroyed_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_destroyed_count

    @infrastructure_destroyed_count.setter
    def infrastructure_destroyed_count(self, infrastructure_destroyed_count):
        """Sets the infrastructure_destroyed_count of this Loss.


        :param infrastructure_destroyed_count: The infrastructure_destroyed_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_destroyed_count = infrastructure_destroyed_count

    @property
    def infrastructure_destroyed_house_count(self):
        """Gets the infrastructure_destroyed_house_count of this Loss.  # noqa: E501


        :return: The infrastructure_destroyed_house_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_destroyed_house_count

    @infrastructure_destroyed_house_count.setter
    def infrastructure_destroyed_house_count(self, infrastructure_destroyed_house_count):
        """Sets the infrastructure_destroyed_house_count of this Loss.


        :param infrastructure_destroyed_house_count: The infrastructure_destroyed_house_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_destroyed_house_count = infrastructure_destroyed_house_count

    @property
    def infrastructure_affected_house_count(self):
        """Gets the infrastructure_affected_house_count of this Loss.  # noqa: E501


        :return: The infrastructure_affected_house_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_affected_house_count

    @infrastructure_affected_house_count.setter
    def infrastructure_affected_house_count(self, infrastructure_affected_house_count):
        """Sets the infrastructure_affected_house_count of this Loss.


        :param infrastructure_affected_house_count: The infrastructure_affected_house_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_affected_house_count = infrastructure_affected_house_count

    @property
    def infrastructure_destroyed_road_count(self):
        """Gets the infrastructure_destroyed_road_count of this Loss.  # noqa: E501


        :return: The infrastructure_destroyed_road_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_destroyed_road_count

    @infrastructure_destroyed_road_count.setter
    def infrastructure_destroyed_road_count(self, infrastructure_destroyed_road_count):
        """Sets the infrastructure_destroyed_road_count of this Loss.


        :param infrastructure_destroyed_road_count: The infrastructure_destroyed_road_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_destroyed_road_count = infrastructure_destroyed_road_count

    @property
    def infrastructure_affected_road_count(self):
        """Gets the infrastructure_affected_road_count of this Loss.  # noqa: E501


        :return: The infrastructure_affected_road_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_affected_road_count

    @infrastructure_affected_road_count.setter
    def infrastructure_affected_road_count(self, infrastructure_affected_road_count):
        """Sets the infrastructure_affected_road_count of this Loss.


        :param infrastructure_affected_road_count: The infrastructure_affected_road_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_affected_road_count = infrastructure_affected_road_count

    @property
    def infrastructure_destroyed_bridge_count(self):
        """Gets the infrastructure_destroyed_bridge_count of this Loss.  # noqa: E501


        :return: The infrastructure_destroyed_bridge_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_destroyed_bridge_count

    @infrastructure_destroyed_bridge_count.setter
    def infrastructure_destroyed_bridge_count(self, infrastructure_destroyed_bridge_count):
        """Sets the infrastructure_destroyed_bridge_count of this Loss.


        :param infrastructure_destroyed_bridge_count: The infrastructure_destroyed_bridge_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_destroyed_bridge_count = infrastructure_destroyed_bridge_count

    @property
    def infrastructure_affected_bridge_count(self):
        """Gets the infrastructure_affected_bridge_count of this Loss.  # noqa: E501


        :return: The infrastructure_affected_bridge_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_affected_bridge_count

    @infrastructure_affected_bridge_count.setter
    def infrastructure_affected_bridge_count(self, infrastructure_affected_bridge_count):
        """Sets the infrastructure_affected_bridge_count of this Loss.


        :param infrastructure_affected_bridge_count: The infrastructure_affected_bridge_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_affected_bridge_count = infrastructure_affected_bridge_count

    @property
    def infrastructure_destroyed_electricity_count(self):
        """Gets the infrastructure_destroyed_electricity_count of this Loss.  # noqa: E501


        :return: The infrastructure_destroyed_electricity_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_destroyed_electricity_count

    @infrastructure_destroyed_electricity_count.setter
    def infrastructure_destroyed_electricity_count(self, infrastructure_destroyed_electricity_count):
        """Sets the infrastructure_destroyed_electricity_count of this Loss.


        :param infrastructure_destroyed_electricity_count: The infrastructure_destroyed_electricity_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_destroyed_electricity_count = infrastructure_destroyed_electricity_count

    @property
    def infrastructure_affected_electricity_count(self):
        """Gets the infrastructure_affected_electricity_count of this Loss.  # noqa: E501


        :return: The infrastructure_affected_electricity_count of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_affected_electricity_count

    @infrastructure_affected_electricity_count.setter
    def infrastructure_affected_electricity_count(self, infrastructure_affected_electricity_count):
        """Sets the infrastructure_affected_electricity_count of this Loss.


        :param infrastructure_affected_electricity_count: The infrastructure_affected_electricity_count of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_affected_electricity_count = infrastructure_affected_electricity_count

    @property
    def infrastructure_economic_loss(self):
        """Gets the infrastructure_economic_loss of this Loss.  # noqa: E501


        :return: The infrastructure_economic_loss of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._infrastructure_economic_loss

    @infrastructure_economic_loss.setter
    def infrastructure_economic_loss(self, infrastructure_economic_loss):
        """Sets the infrastructure_economic_loss of this Loss.


        :param infrastructure_economic_loss: The infrastructure_economic_loss of this Loss.  # noqa: E501
        :type: int
        """

        self._infrastructure_economic_loss = infrastructure_economic_loss

    @property
    def agriculture_economic_loss(self):
        """Gets the agriculture_economic_loss of this Loss.  # noqa: E501


        :return: The agriculture_economic_loss of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._agriculture_economic_loss

    @agriculture_economic_loss.setter
    def agriculture_economic_loss(self, agriculture_economic_loss):
        """Sets the agriculture_economic_loss of this Loss.


        :param agriculture_economic_loss: The agriculture_economic_loss of this Loss.  # noqa: E501
        :type: int
        """

        self._agriculture_economic_loss = agriculture_economic_loss

    @property
    def created_on(self):
        """Gets the created_on of this Loss.  # noqa: E501


        :return: The created_on of this Loss.  # noqa: E501
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this Loss.


        :param created_on: The created_on of this Loss.  # noqa: E501
        :type: datetime
        """

        self._created_on = created_on

    @property
    def modified_on(self):
        """Gets the modified_on of this Loss.  # noqa: E501


        :return: The modified_on of this Loss.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_on

    @modified_on.setter
    def modified_on(self, modified_on):
        """Sets the modified_on of this Loss.


        :param modified_on: The modified_on of this Loss.  # noqa: E501
        :type: datetime
        """

        self._modified_on = modified_on

    @property
    def description(self):
        """Gets the description of this Loss.  # noqa: E501


        :return: The description of this Loss.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Loss.


        :param description: The description of this Loss.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def estimated_loss(self):
        """Gets the estimated_loss of this Loss.  # noqa: E501


        :return: The estimated_loss of this Loss.  # noqa: E501
        :rtype: int
        """
        return self._estimated_loss

    @estimated_loss.setter
    def estimated_loss(self, estimated_loss):
        """Sets the estimated_loss of this Loss.


        :param estimated_loss: The estimated_loss of this Loss.  # noqa: E501
        :type: int
        """
        if estimated_loss is not None and estimated_loss > 9223372036854775807:  # noqa: E501
            raise ValueError("Invalid value for `estimated_loss`, must be a value less than or equal to `9223372036854775807`")  # noqa: E501
        if estimated_loss is not None and estimated_loss < -9223372036854775808:  # noqa: E501
            raise ValueError("Invalid value for `estimated_loss`, must be a value greater than or equal to `-9223372036854775808`")  # noqa: E501

        self._estimated_loss = estimated_loss

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Loss, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Loss):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
